version: '3.8'

services:
  cashmate:
    build: .
    container_name: cashmate-app
    environment:
      # Support for both DATABASE_URL and individual env vars
      - DATABASE_URL=${DATABASE_URL:-}
      - POSTGRES_HOST=${POSTGRES_HOST:-postgres}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - POSTGRES_DB=${POSTGRES_DB:-cashmate}
      - POSTGRES_USER=${POSTGRES_USER:-cashmate}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - DEBUG=${DEBUG:-False}
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    stdin_open: true
    tty: true
    networks:
      - cashmate-network
    profiles:
      - local      # CLI with local PostgreSQL
      - external   # CLI with external database

  telegram-bot:
    build: .
    container_name: cashmate-telegram-bot
    command: python telegram_bot.py
    environment:
      # Support for both DATABASE_URL and individual env vars
      - DATABASE_URL=${DATABASE_URL:-}
      - POSTGRES_HOST=${POSTGRES_HOST:-postgres}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - POSTGRES_DB=${POSTGRES_DB:-cashmate}
      - POSTGRES_USER=${POSTGRES_USER:-cashmate}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - DEBUG=${DEBUG:-False}
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - cashmate-network
    profiles:
      - telegram            # Telegram Bot with local PostgreSQL
      - telegram-external   # Telegram Bot with external database

  postgres:
    image: postgres:15-alpine
    container_name: cashmate-postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-cashmate}
      - POSTGRES_USER=${POSTGRES_USER:-cashmate}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-cashmate}"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - cashmate-network
    profiles:
      - local      # For CLI with local PostgreSQL
      - telegram   # For Telegram Bot with local PostgreSQL

  adminer:
    image: adminer:latest
    container_name: cashmate-adminer
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - cashmate-network
    profiles:
      - local      # For CLI with local PostgreSQL
      - telegram   # For Telegram Bot with local PostgreSQL

volumes:
  postgres_data:
    driver: local

networks:
  cashmate-network:
    driver: bridge